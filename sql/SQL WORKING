CREATE TABLE UNIVERSITY_USER(
UNI_ID       INT     NOT NULL AUTO_INCREMENT,
UNI_PASSWORD    VARCHAR(32)   NOT NULL,
UNI_ATTEND    VARCHAR(50)   NOT NULL,
UNI_COURSE_LEVEL   INT   NOT NULL,
UNI_EMAIL    VARCHAR(50)      NOT NULL,
UNI_FIRST_NAME   VARCHAR(50)  NOT NULL,
UNI_LAST_NAME    VARCHAR(50)	NOT NULL,
PRIMARY KEY(UNI_ID));

CREATE TABLE ACCESS(
SYS_ACCESS     INT		NOT NULL AUTO_INCREMENT,
SYS_PERMISSION    VARCHAR(5)	NOT NULL,
SYS_MODIFY_ACCESS    VARCHAR(5),
PRIMARY KEY(SYS_ACCESS));

CREATE TABLE GUEST_USER (
 GUEST_ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
 GUEST_USER_NAME VARCHAR(15) NOT NULL,
 GUEST_USER_PASSWORD VARCHAR(15) NOT NULL,
 COURSE_INTEREST VARCHAR(50) NOT NULL,
 EMAIL VARCHAR(45) NOT NULL,
 FIRST_NAME VARCHAR(45) NOT NULL,
 LAST_NAME VARCHAR(45) NOT NULL);

CREATE TABLE POST(
POST_ID	         INT        PRIMARY KEY NOT NULL AUTO_INCREMENT,
POST_SUMMARY     VARCHAR(450)   NOT NULL,
POST_DATE        DATE           NOT NULL,
SYS_ACCESS       INT        NOT NULL,
FOREIGN KEY(SYS_ACCESS) REFERENCES ACCESS(SYS_ACCESS));

CREATE TABLE EDIT(
CONTENT_ID              INT           PRIMARY KEY  AUTO_INCREMENT,
CONTENT_SELECT_RATING   VARCHAR(15)       NOT NULL,
CONTENT_COMPOSE_TEXT    VARCHAR(150)      NOT NULL,
CONTENT_ADD_IMAGE       VARCHAR(50)       NOT NULL,
SYS_ACCESS              INT            NOT NULL,
FOREIGN KEY (SYS_ACCESS) REFERENCES POST(SYS_ACCESS));

CREATE TABLE SORT(
SORT_ID		  INT		PRIMARY KEY  AUTO_INCREMENT,
SORT_BY_RATING	  VARCHAR(15),
SORT_BY_LATEST	  VARCHAR(15));


CREATE TABLE REVIEWS(
REVIEW_ID           INT          PRIMARY KEY  AUTO_INCREMENT,
REVIEW_TITLE        VARCHAR(50)      NOT NULL,
REVIEW_CATEGORY     VARCHAR(50)      NOT NULL,
REVIEW_DATE         DATE             NOT NULL,
REVIEW_CONTENT      VARCHAR(450),
REVIEW_STARS        INT  NOT NULL);

CREATE TABLE ACCOUNT(
ACC_ID        INT     PRIMARY KEY AUTO_INCREMENT,
DATE_CREATE   DATE   NOT NULL,
GUEST_ID      INT,
UNI_ID        INT,
FOREIGN KEY (GUEST_ID) REFERENCES GUEST_USER(GUEST_ID),
FOREIGN KEY (UNI_ID) REFERENCES UNIVERSITY_USER(UNI_ID));

CREATE TABLE ACCOUNT_HAS_ACCESS (
ACC_ID       INT  NOT NULL,
GUEST_ID     INT  NOT NULL,
UNI_ID       INT  NOT NULL,
SYS_ACCESS   INT  NOT NULL);

CREATE TABLE ASK_QUESTION(
QUESTION_ID           INT    PRIMARY KEY AUTO_INCREMENT,
QUESTION_LIST_TOPIC   VARCHAR(150),
CONTENT_ID            INT     NOT NULL,
GUEST_ID              INT    NOT NULL,
FOREIGN KEY (CONTENT_ID)REFERENCES EDIT(CONTENT_ID),
FOREIGN KEY(GUEST_ID) REFERENCES GUEST_USER(GUEST_ID));


CREATE TABLE AMEND(
AMEND_ID          INT   PRIMARY KEY AUTO_INCREMENT,
REVIEW_ID      INT,
QUESTION_ID    INT,
CONSTRAINT FOREIGN KEY(REVIEW_ID) REFERENCES REVIEWS(REVIEW_ID),
CONSTRAINT FOREIGN KEY(QUESTION_ID) REFERENCES ASK_QUESTION(QUESTION_ID));


CREATE TABLE LOGIN (
LOGIN_ID INTEGER PRIMARY KEY  AUTO_INCREMENT,
LOGIN_PASSWORD CHAR(32) NOT NULL,
GUEST_ID   INT    NOT NULL,
UNI_ID     INT    NOT NULL,
FOREIGN KEY(GUEST_ID) REFERENCES GUEST_USER(GUEST_ID),
FOREIGN KEY(UNI_ID) REFERENCES UNIVERSITY_USER(UNI_ID));

CREATE TABLE CATEGORY(
CAT_NAME     VARCHAR(150)    PRIMARY KEY,
CAT_ID       INT         NOT NULL,
CAT_QTY      INT  UNSIGNED 	NOT NULL,
REVIEW_ID    INT,
CONTENT_ID   INT,
AMEND_ID        INT,
SYS_ACCESS   INT,
FOREIGN KEY(REVIEW_ID) REFERENCES REVIEWS(REVIEW_ID),
FOREIGN KEY(CONTENT_ID) REFERENCES EDIT(CONTENT_ID),
FOREIGN KEY(AMEND_ID) REFERENCES AMEND(AMEND_ID),
FOREIGN KEY(SYS_ACCESS) REFERENCES ACCESS(SYS_ACCESS));

CREATE TABLE QUESTION_REPLY(
REPLY_ID      INT       PRIMARY KEY AUTO_INCREMENT,
REPLY_POST    VARCHAR(500),
QUESTION_ID   INT,
FOREIGN KEY(QUESTION_ID) REFERENCES ASK_QUESTION(QUESTION_ID));

CREATE TABLE DEACTIVATE_REQUEST(
DEACTIVATE_REQUEST INT PRIMARY KEY AUTO_INCREMENT,
DEACTIVATE_DATE DATETIME,
GUEST_ID          INT,
FOREIGN KEY(GUEST_ID) REFERENCES GUEST_USER(GUEST_ID));

CREATE TABLE SEARCH(
SEARCH_TERM     VARCHAR(150)     PRIMARY KEY,
CAT_NAME        VARCHAR(150),
FOREIGN KEY(CAT_NAME) REFERENCES CATEGORY (CAT_NAME));

CREATE TABLE SITE_ADMIN(
ADMIN_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
ADMIN_NAME VARCHAR(45) NOT NULL,
REVIEW_ID    INT,
FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS(REVIEW_ID));

CREATE TABLE ACCESS_HAS_REVIEWS(
SYS_ACCESS     INT,
REVIEW_ID      INT,
FOREIGN KEY(SYS_ACCESS) REFERENCES ACCESS(SYS_ACCESS),
FOREIGN KEY(REVIEW_ID) REFERENCES REVIEWS(REVIEW_ID));
