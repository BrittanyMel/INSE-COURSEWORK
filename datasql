LAU Database


CREATE TABLE UNIVERSITY_USER(
UNI_ID       INTEGER     NOT NULL,
UNI_PASSWORD    CHAR(32)   NOT NULL,
UNI_ATTEND    VARCHAR(50)   NOT NULL,
UNI_COURSE_LEVEL   INTEGER   NOT NULL,
UNI_EMAIL    VARCHAR(50)      NOT NULL,
UNI_FIRST_NAME   VARCHAR(50)  NOT NULL,
UNI_LAST_NAME		VARCHAR(50)	NOT NULL,
PRIMARY KEY(UNI_ID));

CREATE TABLE POST(
POST_ID	         INTEGER        PRIMARY KEY,
POST_SUMMARY     VARCHAR(450)   NOT NULL,
POST_DATE        DATE           NOT NULL,
CONTRAINT FOREIGN KEY(SYS_ACCESS)
REFERENCES ACCESS(SYS_ACCESS)
);

CONSTRAINT FOREIGN KEY(SYS_ACCESS)
REFERENCES ACCESS(SYS_ACCESS));

CREATE TABLE UPDATE(

UPDATE_ID		INTEGER		PRIMARY KEY,
CONSTRAINT FOREIGN KEY(REVIEW_ID)
REFERENCES REVIEWS(REVIEW-ID)
CONSTRAINT FOREIGN KEY(QUESTION_ID)
REFERENCES ASK_QUESTION(QUESTION_ID));

CREATE TABLE ACCESS(
SYS_ACCESS     INTEGER		NOT NULL,
SYS_PERMISSION    CHAR(5)	NOT NULL,
SYS_MODIFY_ACCESS	VARCHAR(5),
PRIMARY KEY(SYS_ACCESS));

INSERT INTO ACCESS VALUES(0001,'YES','YES');

CREATE TABLE SEARCH(

SEARCH_TERM		VARCHAR(150)	PRIMARY KEY,
CONSTRIANT FOREIGN KEY (CAT_NAME)
REFERENCE CATEGORY (CAT_NAME));

CREATE TABLE CATEGORY(

CAT_NAME		VARCHAR(150)			PRIMARY KEY,
CAT_ID			INTEGER				NOT NULL,
CAT_QTY			INTEGER		UNSIGNED 	NOT NULL,
CONSTANT FOREIGN KEY(REVIEW_ID)
REFERENCES REVIEWS(REVIEW_ID)
CONSTANT FOREIGN KEY(CONTENT_ID)
REFERENCES EDIT(CONTENT-ID)
CONSTANT FOREIGN KEY(UPDATE_ID)
REFERENCES UPDATE(UPDATE_ID)
CONSTANT FOREIGN KEY(SYS_ACCESS)
REFERENCES ACCESS(SYS_ACCESS));


CREATE TABLE REVIEWS(

REVIEW_ID		INTEGER		PRIMARY KEY,
REVIEW_QTY		INTEGER		UNSIGNED	NOTNULL,
REVIEW_CATEGORY		VARCHAR(50)	NOT NULL,
REVIEW_DATE		DATE		NOT NULL,
REVIEW_CONTENT		VARCHAR(450),
CONSTANT FOREIGN KEY(SORT_ID)
REFERENCES SORT(SORT_ID));


CREATE TABLE QUESTION_REPLY(

REPLY_ID		INTEGER		PRIMARY KEY,
REPLY_POST		VARCHAR(500),
CONSTANT FOREIGN KEY(QUESTION_ID)
REFERENCES ASK_QUESTION(QUESTION_ID));


CREATE TABLE ASK_QUESTION(

QUESTION_ID		INTEGER		PRIMARY KEY,
QUESTION_LIST_TOPIC	VARCHAR(150),
CONSTANT FOREIGN KEY (CONTENT_ID)
REFERENCES EDIT(CONTENT_ID)
CONSTANT FOREIGN KEY(ACCOUNT_GUEST_USER_GUEST_ID)
REFERENCES ACCOUNT_HAS_ACCESS(ACCOUNT_GUEST_USER_GUEST_ID));

CREATE TABLE EDIT(
CONTENT_ID              INTEGER           PRIMARY KEY,
CONTENT_SELECT_RATING   VARCHAR(15),
CONTENT_COMPOSE_TEXT    VARCHAR(150),
CONTENT_ADD_IMAGE       VARCHAR(50));

,
CONSTANT FOREIGN KEY(ACCESS_SYS_ACCESS)
REFERENCES POST(ACCESS_SYS_ACCESS));

CREATE TABLE SORT(
SORT_ID		  INTEGER		PRIMARY KEY,
SORT_BY_RATING	  VARCHAR(15),
SORT_BY_LATEST	  VARCHAR(15)
);




CREATE TABLE UNIVERSITY_USER (

 UNI_ID INTEGER PRIMARY KEY,
 UNI_PASSWORD VARCHAR(15) NOT NULL,
 UNI_ATTEND VARCHAR(50) NOT NULL,
 COURSE_LEVEL INTEGER  NOT NULL,
 EMAIL VARCHAR(30) NOT NULL,
 FIRST_NAME VARCHAR(45) NOT NULL,
 LAST_NAME VARCHAR(45) NOT NULL,
)

CREATE TABLE LOGIN (
LOGIN_ID INTEGER PRIMARY KEY,
LOGIN_PASSWORD CHAR(32) NOT NULL,
GUEST_ID   INTEGER    NOT NULL,
UNI_ID     INTEGER    NOT NULL,
FOREIGN KEY(GUEST_ID) REFERENCES GUEST_USER(GUEST_ID),
FOREIGN KEY(UNI_ID) REFERENCES UNIVERSITY_USER(UNI_ID)
);

CREATE TABLE GUEST_USER (
 GUEST_ID INTEGER PRIMARY KEY,
 GUEST_USER_NAME VARCHAR(15) NOT NULL,
 GUEST_USER_PASSWORD VARCHAR(15) NOT NULL,
 COURSE_INTEREST VARCHAR(50) NOT NULL,
 EMAIL VARCHAR(45) NOT NULL,
 FIRST_NAME VARCHAR(45) NOT NULL,
 LAST_NAME VARCHAR(45) NOT NULL
);

CREATE TABLE ACCOUNT_CAN_EDIT (

 CONSTANT FOREIGN KEY(ACC_ID),
 REFERENCE ACCOUNT(ACC_ID),
 CONSTANT FOREIGN KEY(GUESTUSER_GUEST_ID),
 REFERENCE ACCOUNT(ACC_ID),
 CONSTANT FOREIGN KEY(UNIVERSITYUSER_UNI_ID),
 REFERENCE ACCOUNT(UNIVERSITYUSER_UNI_ID),
 CONSTANT FOREIGN KEY(CONTENT_ID),
 REFERENCE EDIT(CONTENT_ID),
 CONSTANT FOREIGN KEY(POST_ACCESS_SYS_ACCESS),
 REFERENCE EDIT(POST_ACCESS_SYS_ACCESS),
)

CREATE TABLE EDIT(
CONTENT_ID INTEGER PRIMARY KEY,
SELECT_RATING VARCHAR(45) NOT NULL,
COMPOSE_TEXT VARCHAR(45) NOT NULL,
SELECT_IMAGE VARCHAR(45),
CONSTRAINT FOREIGN KEY(ACCESS_SYS_ACCESS)
REFERENCES POST(ACCESS_SYS_ACCESS)
);

CREATE TABLE SITE_ADMIN(

 ADMIN_ID INTEGER PRIMARY KEY,
 ADMIN_NAME VARCHAR(45) NOT NULL
);

CREATE TABLE DEACTIVATE_REQUEST(

 DEACTIVATE_REQUEST INTEGER PRIMARY KEY,
 DEACTIVATE_DATE DATETIME
);

CREATE TABLE TIME(
 SORT_ID INTEGER PRIMARY KEY,
 SORT_RATING VARCHAR(45),
 SORT_LATEST VARCHAR(45),
)

CREATE TABLE ACCOUNT_HAS_ACCESS (
 CONSTANT FOREIGN KEY(ACC_ID),
 REFERENCE ACCOUNT(ACC_ID),
 CONSTANT FOREIGN KEY(GUEST_USER_GUEST_ID),
 REFERENCE ACCOUNT(GUEST_USER_GUEST_ID),
 CONSTANT FOREIGN KEY(UNIVERSITY_USER_UNI_ID)
 REFERENCE ACCOUNT(UNIVERSITY_USER_UNI_ID));

,
 CONSTANT FOREIGN KEY(ACCESS_SYS_ACCESS),
 REFERENCE ACCESS(ACCESS_SYS_ACCESS),
)

CREATE TABLE ACCESS_HAS_REVIEWS(
 CONSTANT FOREIGN KEY(ACCESS_SYS_ACCESS),
 REFERENCE ACCESS(ACCESS_SYS_ACCESS),
 CONSTANT FOREIGN KEY(REVIEWS_ID),
 REFERENCE REVIEWS(REVIEWS_ID),
)
